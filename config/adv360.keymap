/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        par_nine: par_nine {
            compatible = "zmk,behavior-mod-morph";
            label = "PAR_NINE";
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ex_one: ex_one {
            compatible = "zmk,behavior-mod-morph";
            label = "EX_ONE";
            bindings =
                <&kp EXCLAMATION>,
                <&kp KP_NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_two: at_two {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_TWO";
            bindings =
                <&kp AT_SIGN>,
                <&kp KP_NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        octo_three: octo_three {
            compatible = "zmk,behavior-mod-morph";
            label = "OCTO_THREE";
            bindings =
                <&kp HASH>,
                <&kp KP_NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        perc_five: perc_five {
            compatible = "zmk,behavior-mod-morph";
            label = "PERC_FIVE";
            bindings =
                <&kp PRCNT>,
                <&kp KP_NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        car_six: car_six {
            compatible = "zmk,behavior-mod-morph";
            label = "CAR_SIX";
            bindings =
                <&kp CARET>,
                <&kp KP_NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amp_seven: amp_seven {
            compatible = "zmk,behavior-mod-morph";
            label = "AMP_SEVEN";
            bindings =
                <&kp AMPS>,
                <&kp KP_NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ast_eight: ast_eight {
            compatible = "zmk,behavior-mod-morph";
            label = "AST_EIGHT";
            bindings =
                <&kp ASTERISK>,
                <&kp KP_NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        par_zero: par_zero {
            compatible = "zmk,behavior-mod-morph";
            label = "PAR_ZERO";
            bindings =
                <&kp RPAR>,
                <&kp KP_NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dol_four: dol_four {
            compatible = "zmk,behavior-mod-morph";
            label = "DOL_FOUR";
            bindings =
                <&kp DLLR>,
                <&kp KP_NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        under_minus: under_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDER_MINUS";
            bindings =
                <&kp UNDERSCORE>,
                <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        enter_space: enter_space {
            compatible = "zmk,behavior-mod-morph";
            label = "ENTER_SPACE";
            bindings =
                <&kp KP_ENTER>,
                <&kp SPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sEnter_cEnter: sEnter_cEnter {
            compatible = "zmk,behavior-mod-morph";
            label = "SENTER_CENTER";
            bindings =
                <&kp LS(KP_ENTER)>,
                <&kp LC(KP_ENTER)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        new_backspace_delete: new_backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "NEW_BACKSPACE_DELETE";
            bindings =
                <&hm LC(BACKSPACE) BACKSPACE>,
                <&hm LC(DELETE) DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two_comma: two_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "TWO_COMMA";
            bindings =
                <&kp KP_NUMBER_2>,
                <&kp COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two_comma_lessthan: two_comma_lessthan {
            compatible = "zmk,behavior-mod-morph";
            label = "TWO_COMMA_LESSTHAN";
            bindings =
                <&two_comma>,
                <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        three_dot: three_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_DOT";
            bindings =
                <&kp KP_NUMBER_3>,
                <&kp DOT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        three_dot_greaterthan: three_dot_greaterthan {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_DOT_GREATERTHAN";
            bindings =
                <&three_dot>,
                <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        zero_under: zero_under {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_UNDER";
            bindings =
                <&kp KP_NUMBER_0>,
                <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zero_under_minus: zero_under_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_UNDER_MINUS";
            bindings =
                <&zero_under>,
                <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        tog1_tog5: tog1_tog5 {
            compatible = "zmk,behavior-mod-morph";
            label = "TOG1_TOG5";
            bindings =
                <&to 1>,
                <&to 5>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        space_underscore: space_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_UNDERSCORE";
            bindings =
                <&kp SPACE>,
                <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPSLOCK  &ex_one         &at_two                        &octo_three                      &dol_four     &perc_five  &kp LEFT_GUI                                                                        &tog1_tog5         &car_six  &amp_seven  &ast_eight  &par_nine  &par_zero  &kp BACKSLASH
&kp ESCAPE    &kp Q           &kp W                          &kp E                            &kp R         &kp T       &kp HOME                                                                            &kp PAGE_UP        &kp Y     &kp U       &kp I       &kp O      &kp P      &kp GRAVE
&kp TAB       &kp A           &kp S                          &kp D                            &kp F         &kp G       &kp END                &kp LCTRL     &kp LALT            &kp RALT        &kp RCTRL  &kp PAGE_DOWN      &kp H     &kp J       &kp K       &kp L      &kp SEMI   &kp SQT
&kp LSHFT     &kp Z           &kp X                          &kp C                            &kp V         &kp B                                            &mo 6               &kp CAPSLOCK                                  &kp N     &kp M       &kp COMMA   &kp DOT    &kp FSLH   &kp RSHFT
&mo 2         &kp DOWN_ARROW  &hm LC(LEFT_ARROW) LEFT_ARROW  &hm LC(RIGHT_ARROW) RIGHT_ARROW  &kp UP_ARROW              &new_backspace_delete  &enter_space  &sEnter_cEnter      &sEnter_cEnter  &kp ENTER  &space_underscore            &kp EQUAL   &kp LBKT    &kp RBKT   &kp MINUS  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp CAPSLOCK  &ex_one         &at_two                        &octo_three                      &dol_four     &perc_five  &kp LEFT_GUI                                                                        &tog 1             &car_six    &amp_seven  &ast_eight           &par_nine               &par_zero        &kp BSLH
&kp ESCAPE    &none           &none                          &none                            &none         &none       &kp HOME                                                                            &kp PAGE_UP        &kp KP_NUM  &kp KP_N7   &kp KP_N8            &kp KP_N9               &kp KP_MINUS     &kp GRAVE
&kp TAB       &kp A           &kp S                          &kp D                            &none         &none       &kp END                &kp LCTRL     &kp LEFT_ALT        &kp RIGHT_ALT   &kp RCTRL  &kp PAGE_DOWN      &none       &kp KP_N4   &kp KP_N5            &kp KP_N6               &kp KP_PLUS      &kp SQT
&kp LSHFT     &kp Z           &kp X                          &kp C                            &kp V         &kp B                                            &mo 4               &kp CAPSLOCK                                  &none       &kp KP_N1   &two_comma_lessthan  &three_dot_greaterthan  &kp KP_SLASH     &kp RSHFT
&mo 2         &kp DOWN_ARROW  &hm LC(LEFT_ARROW) LEFT_ARROW  &hm LC(RIGHT_ARROW) RIGHT_ARROW  &kp UP_ARROW              &new_backspace_delete  &enter_space  &sEnter_cEnter      &sEnter_cEnter  &kp ENTER  &space_underscore              &kp EQUAL   &kp LEFT_BRACKET     &kp RIGHT_BRACKET       &kp KP_NUMBER_0  &mo 2
            >;
        };

        layer_fn {
            bindings = <
&caps_word  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp PRINTSCREEN                                                            &kp C_MUTE         &kp F6      &kp F7     &kp F8     &kp F9     &kp F10       &kp F11
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans  &kp C_VOL_UP                                                               &kp C_VOL_UP       &kp KP_NUM  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp F12
&trans      &trans  &trans  &trans  &trans  &trans  &kp C_VOL_DN     &trans     &trans              &trans          &trans     &kp C_VOL_DN       &none       &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp SINGLE_QUOTE
&trans      &trans  &trans  &trans  &trans  &trans                              &trans              &caps_word                                    &none       &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_SLASH  &trans
&trans      &trans  &trans  &trans  &trans          &kp BACKSPACE    &kp ENTER  &sEnter_cEnter      &sEnter_cEnter  &kp ENTER  &space_underscore              &kp EQUAL  &kp COMMA  &kp DOT    &kp KP_N0     &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                       &trans                  &none  &none       &none            &none       &none       &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                 &bootloader             &none  &none       &none            &none       &none       &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &none       &bt BT_CLR      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none            &none       &none       &none
&none  &none         &none         &none         &none         &none                                             &none           &none                                           &none  &none       &none            &none       &none       &none
&none  &none         &none         &none         &none                       &bl BL_INC              &bl BL_DEC  &none           &bl BL_TOG  &none       &none                          &bl BL_TOG  &rgb_ug RGB_TOG  &bl BL_INC  &bl BL_DEC  &none
            >;
        };

        layer_lefthand_kb {
            bindings = <
&kp BACKSLASH     &par_zero  &par_nine          &ast_eight        &amp_seven  &car_six  &kp ESC                                                            &none  &none  &none  &none  &none  &none  &none
&kp APOS          &kp P      &kp O              &kp I             &kp U       &kp Y     &kp PAGE_UP                                                        &none  &none  &none  &none  &none  &none  &none
&kp SINGLE_QUOTE  &kp SEMI   &kp L              &kp K             &kp J       &kp H     &kp PAGE_DOWN      &kp RALT   &kp RIGHT_CONTROL      &none  &none  &none  &none  &none  &none  &none  &none  &none
&kp RIGHT_SHIFT   &kp SLASH  &kp DOT            &kp COMMA         &kp M       &kp N                                   &mo 4                  &none                &none  &none  &none  &none  &none  &none
&mo 2             &kp MINUS  &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp EQUAL             &space_underscore  &kp ENTER  &sEnter_cEnter         &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        layer_left_keypad {
            bindings = <
&kp BACKSLASH     &par_zero        &par_nine               &ast_eight           &amp_seven       &car_six    &to 0                                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp GRAVE         &kp KP_MINUS     &kp KP_NUMBER_9         &kp KP_NUMBER_8      &kp KP_NUMBER_7  &kp KP_NUM  &kp PAGE_UP                                                               &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SINGLE_QUOTE  &kp KP_PLUS      &kp KP_NUMBER_6         &kp KP_NUMBER_5      &kp KP_NUMBER_4  &none       &kp PAGE_DOWN      &kp RIGHT_CONTROL  &kp RALT            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp RIGHT_SHIFT   &kp KP_SLASH     &three_dot_greaterthan  &two_comma_lessthan  &kp KP_NUMBER_1  &none                                             &kp CAPSLOCK        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&mo 2             &kp KP_NUMBER_0  &kp RIGHT_BRACKET       &kp LEFT_BRACKET     &kp EQUAL                    &space_underscore  &kp ENTER          &sEnter_cEnter      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        misc_hotkeys {
            bindings = <
&none  &none       &none       &none       &none        &none       &kp LS(F1)                                  &none  &none  &none  &none  &none  &none  &none
&none  &none       &none       &none       &none        &none       &none                                       &none  &none  &none  &none  &none  &none  &none
&none  &kp LS(F2)  &kp LS(F3)  &kp LS(F4)  &kp LS(F5)   &kp LS(F6)  &none       &none  &none      &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none       &none       &none       &none        &none                          &mo 6      &none                &none  &none  &none  &none  &none  &none
&none  &kp LS(F7)  &kp LS(F8)  &kp LS(F9)  &kp LS(F10)              &none       &none  &none      &none  &none  &none         &none  &none  &none  &none  &none
            >;

            label = "misc";
        };
    };
};
